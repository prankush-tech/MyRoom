/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 room.glb -t -T 
Files: room.glb [398.6KB] > /home/prankush1999/Code/MyRoom/public/room-transformed.glb [193.24KB] (52%)
*/

import * as THREE from "three";
import React from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Chair: THREE.Mesh;
    keyBoard_Buttons: THREE.Mesh;
  };
  materials: {};
};

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes } = useGLTF("/room-transformed.glb") as GLTFResult;

  // Load texture
  const texture = new THREE.TextureLoader().load(
    "/Neutral_Bake1_CyclesBake_COMBINED.jpg"
  );
  texture.flipY = false;

  return (
    <group {...props} dispose={null} position={[0, -3.3, 0]}>
      <mesh
        geometry={nodes.Chair.geometry}
        material={nodes.Chair.material}
        position={[0, 0.019, 0]}
      >
        <meshStandardMaterial map={texture} side={THREE.DoubleSide} />
      </mesh>
      <mesh
        geometry={nodes.keyBoard_Buttons.geometry}
        material={nodes.keyBoard_Buttons.material}
      >
        <meshStandardMaterial map={texture} side={THREE.DoubleSide} />
      </mesh>
    </group>
  );
}

useGLTF.preload("/room-transformed.glb");
