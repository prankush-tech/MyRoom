/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 room.glb -t -T 
Files: room.glb [382.99KB] > /home/prankush1999/Code/MyRoom/public/room-transformed.glb [202.7KB] (47%)
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type ActionName = 'ChairAction'

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}

type GLTFResult = GLTF & {
  nodes: {
    Chair: THREE.Mesh
    CHairBottom: THREE.Mesh
    keyBoard_Buttons: THREE.Mesh
  }
  materials: {}
  animations: GLTFAction[]
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const group = React.useRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF('/room-transformed.glb') as GLTFResult
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <mesh name="Chair" geometry={nodes.Chair.geometry} material={nodes.Chair.material} position={[-0.896, 2.356, 6.248]} />
        <mesh name="CHairBottom" geometry={nodes.CHairBottom.geometry} material={nodes.CHairBottom.material} position={[0, 0.019, 0]} />
        <mesh name="keyBoard_Buttons" geometry={nodes.keyBoard_Buttons.geometry} material={nodes.keyBoard_Buttons.material} />
      </group>
    </group>
  )
}

useGLTF.preload('/room-transformed.glb')
